% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/1.1_function_prepare_polygon.R,
%   R/1.2_function_array_generation.R
\name{prepare_polygon}
\alias{prepare_polygon}
\title{Prepare polygon from various spatial input types}
\usage{
prepare_polygon(input_obj)

prepare_polygon(input_obj)
}
\arguments{
\item{input_obj}{A spatial object. Can be a RasterLayer, RasterBrick, RasterStack,
sf/sfc object, or SpatialPolygons/SpatialPolygonsDataFrame.}
}
\value{
A list with three elements:
\item{polygon}{An sf polygon object}
\item{type}{Character string indicating input type ("raster" or "polygon")}
\item{original}{The original input object}

A list with three elements:
\item{polygon}{An sf polygon object representing the data boundary}
\item{type}{Character string indicating input type ("raster" or "polygon")}
\item{original}{The original input object}
}
\description{
This helper function converts different spatial object types (raster, sf, sp)
into a standardized sf polygon format for further processing.

This helper function converts different spatial object types (raster, sf, sp)
into a standardized sf polygon format for further processing. For rasters,
it creates a polygon only from areas with actual data (non-NA values).
}
\details{
For raster inputs, the function converts to polygons using dissolve = TRUE.
For polygon inputs (sf, sp), it ensures they are in sf format.

For raster inputs, the function creates a mask of non-NA values and converts
only those areas to polygons using dissolve = TRUE. This ensures that points
are only generated within areas that contain actual data.
}
\examples{
\dontrun{
# With a raster
r <- raster::raster(matrix(1:100, 10, 10))
result <- prepare_polygon(r)

# With an sf polygon
poly <- sf::st_sfc(sf::st_polygon(list(rbind(c(0,0), c(1,0), c(1,1), c(0,1), c(0,0)))))
result <- prepare_polygon(poly)
}

}
\keyword{internal}
